---
- name: Install and configure Zabbix
  hosts: zabbix
  become: true
  become_method: sudo
  tasks:
    - name: Downloading zabbix-release pkg
      get_url:
        url: https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4+ubuntu22.04_all.deb
        dest: /tmp/zabbix-release_6.0-4+ubuntu22.04_all.deb
    
    - name: Installing zabbix-release pkg
      shell: dpkg -i /tmp/zabbix-release_6.0-4+ubuntu22.04_all.deb
    
    - name: apt update
      apt:
        update_cache: yes
      
    - name: Install Zabbix server and dependencies
      apt:
        name:
          - zabbix-server-pgsql
          - php8.1-pgsql
          - zabbix-nginx-conf
          - zabbix-sql-scripts
          - zabbix-frontend-php
          - zabbix-agent
          - postgresql
          - postgresql-client
          - python3-psycopg2
          - acl
          - python3-pip
        state: present

    - name: Install zabbix-api Python package
      pip:
        name: zabbix-api
        state: present
        executable: pip3        
    
    - name: Add zabbix user to sudoers
      lineinfile:
        dest: /etc/sudoers
        state: present
        line: 'zabbix    ALL=(ALL:ALL) ALL'
        validate: 'visudo -cf %s'
        insertafter: '^# User privilege specification'        
    
    - name: Ensure the Ansible temp directory for psql exists with correct permissions
      file:
        path: /tmp/.ansible-postgres/tmp
        state: directory
        owner: postgres
        group: postgres
        mode: '0770'

    - name: Ensure the Ansible temp directory for zabbix exists with correct permissions
      file:
        path: /tmp/.ansible-zabbix/tmp
        state: directory
        owner: zabbix
        group: zabbix
        mode: '0770'

    - name: Create Zabbix user
      become_user: postgres
      shell: psql -c "CREATE USER zabbix WITH PASSWORD 'your_password';"    
    
    - name: Create Zabbix database
      become_user: postgres
      shell: psql -c "CREATE DATABASE zabbix OWNER zabbix;"

    - name: Grant privileges on Zabbix database to Zabbix user
      become_user: postgres
      shell: psql -c "GRANT ALL PRIVILEGES ON DATABASE zabbix TO zabbix;"

    - name: Enable Zabbix user to create databases
      become_user: postgres
      shell: psql -c "ALTER USER zabbix CREATEDB;"

    - name: Import initial schema and data
      shell: |
        zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u zabbix psql zabbix
      become_user: zabbix

    - name: Configure Zabbix server
      lineinfile:
        dest: /etc/zabbix/zabbix_server.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^DBHost=', line: 'DBHost=localhost' }
        - { regexp: '^DBName=', line: 'DBName=zabbix' }
        - { regexp: '^DBUser=', line: 'DBUser=zabbix' }
        - { regexp: '^DBPassword=', line: 'DBPassword=your_password' }
    
    - name: Configure Zabbix web frontend
      lineinfile:
        dest: /etc/nginx/conf.d/zabbix.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^#        listen          8080;', line: '        listen          8080;' }        

    - name: Remove Apache start page
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /var/www/html/index.html
      ignore_errors: true
    
    - name: Copy Zabbix configuration template
      template:
        src: zabbix.conf.php.j2
        dest: /etc/zabbix/web/zabbix.conf.php
  
    - name: Start Zabbix server, agent, and Nginx
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true
      with_items:
        - zabbix-server
        - zabbix-agent
        - nginx
        - php8.1-fpm

    - name: Add new host to Zabbix server
      zabbix_host:
        server_url: http://192.168.30.20:8080
        login_user: Admin
        login_password: zabbix
        host_name: "{{ item.host_name }}"
        host_groups:
          - Linux servers
        link_templates:
          - Linux by Zabbix agent
        status: enabled
        state: present
        interfaces:
          - type: 1
            main: 1
            useip: 1
            ip: "{{ item.ip }}"
            dns: ""
            port: "10050"
      with_items:
        - { host_name: 'Webserver-1', ip: '192.168.10.10' }
        - { host_name: 'Webserver-2', ip: '192.168.20.10' }
        - { host_name: 'Elasticsearch', ip: '192.168.10.100' }
        - { host_name: 'Kibana', ip: '192.168.30.10' }
        - { host_name: 'Bastion', ip: '192.168.30.254' }        